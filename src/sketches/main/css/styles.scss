@import '~reset-css';
@import 'colors';
@import 'footer';
@import 'typography';
@import 'instructions';

@mixin cover() {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}

html,
body {
  height: 100%;
}
body {
  margin: 0;
  display: flex;
  flex-direction: column;
}
html.has-zoomed-in,
html.is-zooming-in {
  &,
  body {
    overflow: hidden;
  }
}
*,
*:before,
*:after {
  box-sizing: border-box;
}
.parent {
  flex: 1 1 auto;
}
footer {
  flex: 0 0 auto;
}

.block {
  position: relative;

  padding: 1.4em 1.7em;
  font-size: 21px;
  line-height: 1.25;
  font-family: sans-serif;
}

.block__child {
  width: 100vw;
  height: 100vh;
  border: 1px solid black;
  background: white;
  overflow: hidden;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;

  transform: scale(0);
  transform-origin: top;
  pointer-events: none;
}

.block__child.is-active {
  position: fixed;
  top: 0;
  left: 0;
  overflow: auto;
  pointer-events: all;
    border-color: white;
}

.block.is-resetting .block__child {
  transition: transform 125ms ease-in;
}

.block__child-indicator {
  width: 2em;
  height: 2em;
  background: linear-gradient(to bottom left, rgba(255, 0, 0, 0.66), rgba(255, 0, 0, 0.1) 66%, transparent 100%);
  top: 0.5em;
  right: 0.5em;
  position: absolute;
  opacity: 0;
  transition: opacity 300ms linear;

  &:before,
  &:after {
    content: '';
    width: 33.33%;
    height: 33.33%;
    border-radius: 100%;
    background: red;
    position: absolute;
    top: 50%;
    left: 50%;
    animation-duration: 1s;
    animation-timing-function: cubic-bezier(0.79, 0, 0.26, 1);
    animation-iteration-count: infinite;
    animation-direction: alternate;
  }
  &:before {
    animation-name: childIndUpAndRight;
  }
  &:after {
    animation-name: childIndDownAndLeft;
  }

  .block.is-on-screen & {
    opacity: 1;
  }
}
@keyframes childIndUpAndRight {
  from {
    transform: translate(0, -100%);
  }
  to {
    transform: translate(100%, -200%);
  }
}
@keyframes childIndDownAndLeft {
  from {
    transform: translate(-100%, 0);
  }
  to {
    transform: translate(-200%, 100%);
  }
}
